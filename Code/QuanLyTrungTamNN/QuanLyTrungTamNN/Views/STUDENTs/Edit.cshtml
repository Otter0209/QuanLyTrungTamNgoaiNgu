@model QuanLyTrungTamNN.Models.STUDENT
@{
    ViewBag.Title = "Chỉnh sửa Học viên";
}

<div class="container mt-4">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-warning text-white">
            <h3 class="mb-0">Chỉnh sửa Học viên</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.StudentID)

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, new { @class = "font-weight-bold" })
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập họ tên" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "font-weight-bold" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, new { @class = "font-weight-bold" })
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập số điện thoại" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfBirth, new { @class = "font-weight-bold" })
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, new { @class = "font-weight-bold" })
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập địa chỉ" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ParentID, "Phụ huynh", new { @class = "font-weight-bold" })
                    @Html.DropDownList("ParentID", null, "-- Chọn phụ huynh --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                </div>

                <div class="text-center mt-3">
                    <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Lưu</button>
                    @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            }
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let dateInput = document.getElementById("DateOfBirth");

        if (dateInput) {
            dateInput.addEventListener("change", function () {
                let dob = new Date(this.value);
                let today = new Date();
                let age = today.getFullYear() - dob.getFullYear();

                let monthDiff = today.getMonth() - dob.getMonth();
                if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dob.getDate())) {
                    age--;
                }

                if (age < 6) {
                    alert("Học viên phải từ 6 tuổi trở lên.");
                    this.value = "";
                }
            });
        }
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
